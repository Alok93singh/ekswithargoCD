##################### Pre-requisite ##########################################################################################
## AWS CLI

## Chocolatey links (installer - for argocd cli deployment)
https://chocolatey.org/install

## Pre-requisite links
https://docs.aws.amazon.com/eks/latest/userguide/getting-started-eksctl.html

## kubectl


For installation of can refer https://github.com/Alok93singh/aws-eks-kubernetes-notes/tree/master/01-EKS-Create-Cluster-using-eksctl/01-01-Install-CLIs 

## argocd-cli
curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
chmod +x /usr/local/bin/argocd
argocd version

##################################################CREATE AWS EKS with ArgoCD #######################################################
## Installing Argo CD on Your Cluster
1.Check if kubectl is working as expected
  kubectl get nodes
  
2.Create namespace
  kubectl create namespace argocd
  
3.Run the Argo CD install script provided by the project maintainers.
  kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
  
4. Check the status of your Kubernetes pods
  kubectl get pods -n argocd

## Forwarding Ports to Access Argo CD
5.1.Retrieve the admin password which was automatically generated during your installation and decode from base64 from online
example site: https://www.base64decode.org/ .
  kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}"

5.2 forward those to arbitrarily chosen other ports, like 8080, like so:
  kubectl port-forward svc/argocd-server -n argocd 8080:443
  
5.3 Access from ineternet from browser.
  http://localhost:8080 
  user id : admin
  password :base64 decoded password.
  
## Working with Argo CD from the Command Line
6. Use chocolatey utility to install in Windows ( with admin access)
   choco install argocd-cli
   
## Deploying an Example Application from argocd using argocd cli
7. Deploying an Example Application
  argocd login localhost:8080
  user id : admin
  password :base64 decoded password.
  argocd app create helm-guestbook --repo https://github.com/argoproj/argocd-example-apps.git --path helm-guestbook --dest-server https://kubernetes.default.svc --dest-namespace default
  
7.1 Check status inside argocd
  argocd app get helm-guestbook

7.2 Actually deploy the application
  argocd app sync helm-guestbook

7.3 Port foward from onther session check the application status
  kubectl port-forward svc/helm-guestbook 9090:80
  
 7.4 To access application curl on localhost at port 9090.
  http://localhost:9090
  
  ##Notes:
  list all running argocd application.
     argocd app list

#############################################################################################################################################
